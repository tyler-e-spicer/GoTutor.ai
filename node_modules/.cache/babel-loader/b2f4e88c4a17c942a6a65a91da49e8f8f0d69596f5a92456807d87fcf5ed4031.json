{"ast":null,"code":"export default function isCaptured(board, currentMove, opponentNeighbors) {\n  if (!opponentNeighbors) return false;\n  const toInspect = [...opponentNeighbors];\n  const checked = [];\n  const alliedStone = currentMove % 2 === 0 ? \"⚫\" : \"⚪\";\n  while (toInspect.length) {\n    const currentIntersection = toInspect.pop();\n    if (!currentIntersection) return false;\n    if (board[currentIntersection + 1] && board[currentIntersection + 1].stone === null) {\n      console.log(\"intersection \", board[currentIntersection + 1]);\n      console.log(\"right\");\n      return false;\n    } else if (board[currentIntersection + 1] && board[currentIntersection + 1].stone === alliedStone) {\n      if (!checked.includes(currentIntersection + 1)) toInspect.push(currentIntersection + 1);\n    }\n    if (board[currentIntersection - 1] && board[currentIntersection - 1].stone === null) {\n      console.log(\"intersection \", board[currentIntersection - 1]);\n      console.log(\"left\");\n      return false;\n    } else if (board[currentIntersection - 1] && board[currentIntersection - 1].stone === alliedStone) {\n      if (!checked.includes(currentIntersection - 1)) toInspect.push(currentIntersection - 1);\n    }\n    if (board[currentIntersection + 19] && board[currentIntersection + 19].stone === null) {\n      console.log(\"intersection \", board[currentIntersection + 19]);\n      console.log(\"bottom\");\n      return false;\n    } else if (board[currentIntersection + 19] && board[currentIntersection + 19].stone === alliedStone) {\n      if (!checked.includes(currentIntersection + 19)) toInspect.push(currentIntersection + 19);\n    }\n    if (board[currentIntersection - 19] && board[currentIntersection - 19].stone === null) {\n      console.log(\"intersection \", board[currentIntersection - 19]);\n      console.log(\"top\");\n      return false;\n    } else if (board[currentIntersection - 19] && board[currentIntersection - 19].stone === alliedStone) {\n      if (!checked.includes(currentIntersection - 19)) toInspect.push(currentIntersection - 19);\n    }\n    checked.push(currentIntersection);\n  }\n  return checked;\n}","map":{"version":3,"names":["isCaptured","board","currentMove","opponentNeighbors","toInspect","checked","alliedStone","length","currentIntersection","pop","stone","console","log","includes","push"],"sources":["/Users/tylerspicer/Desktop/Codesmith/solo-project/src/utils/is-captured.ts"],"sourcesContent":["import { StarPoint } from \"../../types\";\n\nexport default function isCaptured(\n  board: StarPoint[],\n  currentMove: number,\n  opponentNeighbors: number[]\n): number[] | false {\n  if (!opponentNeighbors) return false;\n\n  const toInspect: number[] = [...opponentNeighbors];\n  const checked: number[] = [];\n  const alliedStone: string = currentMove % 2 === 0 ? \"⚫\" : \"⚪\";\n\n  while (toInspect.length) {\n    const currentIntersection = toInspect.pop();\n    if (!currentIntersection) return false;\n\n    if (board[currentIntersection + 1] && board[currentIntersection + 1].stone === null) {\n      console.log(\"intersection \", board[currentIntersection + 1]);\n      console.log(\"right\");\n      return false;\n    } else if (board[currentIntersection + 1] && board[currentIntersection + 1].stone === alliedStone) {\n      if (!checked.includes(currentIntersection + 1)) toInspect.push(currentIntersection + 1);\n    }\n\n    if (board[currentIntersection - 1] && board[currentIntersection - 1].stone === null) {\n      console.log(\"intersection \", board[currentIntersection - 1]);\n      console.log(\"left\");\n      return false;\n    } else if (board[currentIntersection - 1] && board[currentIntersection - 1].stone === alliedStone) {\n      if (!checked.includes(currentIntersection - 1)) toInspect.push(currentIntersection - 1);\n    }\n\n    if (board[currentIntersection + 19] && board[currentIntersection + 19].stone === null) {\n      console.log(\"intersection \", board[currentIntersection + 19]);\n      console.log(\"bottom\");\n      return false;\n    } else if (board[currentIntersection + 19] && board[currentIntersection + 19].stone === alliedStone) {\n      if (!checked.includes(currentIntersection + 19)) toInspect.push(currentIntersection + 19);\n    }\n\n    if (board[currentIntersection - 19] && board[currentIntersection - 19].stone === null) {\n      console.log(\"intersection \", board[currentIntersection - 19]);\n      console.log(\"top\");\n      return false;\n    } else if (board[currentIntersection - 19] && board[currentIntersection - 19].stone === alliedStone) {\n      if (!checked.includes(currentIntersection - 19)) toInspect.push(currentIntersection - 19);\n    }\n\n    checked.push(currentIntersection);\n  }\n\n  return checked;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}