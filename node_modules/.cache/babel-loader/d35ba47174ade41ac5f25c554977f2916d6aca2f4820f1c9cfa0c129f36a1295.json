{"ast":null,"code":"var _jsxFileName = \"/Users/tylerspicer/Desktop/Codesmith/solo-project/src/components/style-button.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport chBg1 from \"../assets/ch-bg.jpg\";\nimport chBg2 from \"../assets/ch-bg2.jpg\";\nimport chBg3 from \"../assets/ch-bg3.jpg\";\nimport chBg4 from \"../assets/ch-bg4.jpg\";\nimport chBg5 from \"../assets/ch-bg5.jpg\";\nimport chBg6 from \"../assets/ch-bg6.jpg\";\n// would love to find a hosted or SVG solution to the above to prevent storing all these assets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StyleBGButton() {\n  _s();\n  const [styleClicks, setStyleClicks] = useState(0);\n  const [background, setBackground] = useState(chBg1);\n  useEffect(() => {\n    // ensures there is a background assigned at mounting. Covers side effects of style-cycle.\n    const backgroundElement = document.querySelector(\".app-container\");\n    // \n    if (backgroundElement) {\n      backgroundElement.style.backgroundImage = background;\n    }\n    const goBoard = document.querySelector(\".bg-image\");\n    backgroundElement.style.backgroundImage = `url('${background}')`;\n    goBoard.style.backgroundImage = `url(../../assets/goBoard.png)`;\n  }, [background]);\n  const onStyleClick = () => {\n    const bgs = [chBg1, chBg2, chBg3, chBg4, chBg5, chBg6];\n    const backgroundElement = document.querySelector(\".app-container\");\n    const clicks = styleClicks;\n    const goBoard = document.querySelector(\".bg-image\");\n    if (clicks < bgs.length) {\n      setStyleClicks(clicks + 1);\n      const newBackground = bgs[clicks];\n      setBackground(newBackground);\n      backgroundElement.style.backgroundImage = `url('${newBackground}')`;\n      goBoard.style.backgroundImage = `url(../../assets/goBoard.png)`;\n    } else {\n      setStyleClicks(0);\n      const newBackground = bgs[0];\n      setBackground(newBackground);\n      backgroundElement.style.backgroundImage = `url('${newBackground}')`;\n      goBoard.style.backgroundImage = `url(../../assets/goBoard.png)`;\n    }\n    console.log(background);\n    console.log(styleClicks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"style-button\",\n    onClick: onStyleClick,\n    children: \"bg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(StyleBGButton, \"NuQF2weaPYxobYgc4PAM94RpbaI=\");\n_c = StyleBGButton;\nexport default StyleBGButton;\nvar _c;\n$RefreshReg$(_c, \"StyleBGButton\");","map":{"version":3,"names":["React","useState","useEffect","chBg1","chBg2","chBg3","chBg4","chBg5","chBg6","jsxDEV","_jsxDEV","StyleBGButton","_s","styleClicks","setStyleClicks","background","setBackground","backgroundElement","document","querySelector","style","backgroundImage","goBoard","onStyleClick","bgs","clicks","length","newBackground","console","log","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tylerspicer/Desktop/Codesmith/solo-project/src/components/style-button.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport chBg1 from \"../assets/ch-bg.jpg\";\nimport chBg2 from \"../assets/ch-bg2.jpg\";\nimport chBg3 from \"../assets/ch-bg3.jpg\";\nimport chBg4 from \"../assets/ch-bg4.jpg\";\nimport chBg5 from \"../assets/ch-bg5.jpg\";\nimport chBg6 from \"../assets/ch-bg6.jpg\";\n// would love to find a hosted or SVG solution to the above to prevent storing all these assets\n\nfunction StyleBGButton() {\n  const [styleClicks, setStyleClicks] = useState(0);\n  const [background, setBackground] = useState(chBg1);\n\n  useEffect(() => {\n    // ensures there is a background assigned at mounting. Covers side effects of style-cycle.\n    const backgroundElement = document.querySelector(\".app-container\");\n    // \n    if (backgroundElement) {\n      backgroundElement.style.backgroundImage = background;\n    }\n\n    const goBoard = document.querySelector(\".bg-image\");\n    backgroundElement.style.backgroundImage = `url('${background}')`;\n    goBoard.style.backgroundImage = `url(../../assets/goBoard.png)`;\n  }, [background]);\n\n  const onStyleClick = () => {\n    const bgs = [chBg1, chBg2, chBg3, chBg4, chBg5, chBg6];\n\n    const backgroundElement = document.querySelector(\".app-container\");\n    const clicks = styleClicks;\n    const goBoard = document.querySelector(\".bg-image\");\n\n    if (clicks < bgs.length) {\n      setStyleClicks(clicks + 1);\n      const newBackground = bgs[clicks];\n      setBackground(newBackground);\n      backgroundElement.style.backgroundImage = `url('${newBackground}')`;\n      goBoard.style.backgroundImage = `url(../../assets/goBoard.png)`;\n    } else {\n      setStyleClicks(0);\n      const newBackground = bgs[0];\n      setBackground(newBackground);\n      backgroundElement.style.backgroundImage = `url('${newBackground}')`;\n      goBoard.style.backgroundImage = `url(../../assets/goBoard.png)`;\n    }\n    console.log(background);\n    console.log(styleClicks);\n  };\n\n  return (\n    <button className=\"style-button\" onClick={onStyleClick}>\n      bg\n    </button>\n  );\n}\n\nexport default StyleBGButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,KAAK,MAAM,sBAAsB;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACE,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,iBAAiB,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;IAClE;IACA,IAAIF,iBAAiB,EAAE;MACrBA,iBAAiB,CAACG,KAAK,CAACC,eAAe,GAAGN,UAAU;IACtD;IAEA,MAAMO,OAAO,GAAGJ,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IACnDF,iBAAiB,CAACG,KAAK,CAACC,eAAe,GAAI,QAAON,UAAW,IAAG;IAChEO,OAAO,CAACF,KAAK,CAACC,eAAe,GAAI,+BAA8B;EACjE,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,GAAG,GAAG,CAACrB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC;IAEtD,MAAMS,iBAAiB,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;IAClE,MAAMM,MAAM,GAAGZ,WAAW;IAC1B,MAAMS,OAAO,GAAGJ,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IAEnD,IAAIM,MAAM,GAAGD,GAAG,CAACE,MAAM,EAAE;MACvBZ,cAAc,CAACW,MAAM,GAAG,CAAC,CAAC;MAC1B,MAAME,aAAa,GAAGH,GAAG,CAACC,MAAM,CAAC;MACjCT,aAAa,CAACW,aAAa,CAAC;MAC5BV,iBAAiB,CAACG,KAAK,CAACC,eAAe,GAAI,QAAOM,aAAc,IAAG;MACnEL,OAAO,CAACF,KAAK,CAACC,eAAe,GAAI,+BAA8B;IACjE,CAAC,MAAM;MACLP,cAAc,CAAC,CAAC,CAAC;MACjB,MAAMa,aAAa,GAAGH,GAAG,CAAC,CAAC,CAAC;MAC5BR,aAAa,CAACW,aAAa,CAAC;MAC5BV,iBAAiB,CAACG,KAAK,CAACC,eAAe,GAAI,QAAOM,aAAc,IAAG;MACnEL,OAAO,CAACF,KAAK,CAACC,eAAe,GAAI,+BAA8B;IACjE;IACAO,OAAO,CAACC,GAAG,CAACd,UAAU,CAAC;IACvBa,OAAO,CAACC,GAAG,CAAChB,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEH,OAAA;IAAQoB,SAAS,EAAC,cAAc;IAACC,OAAO,EAAER,YAAa;IAAAS,QAAA,EAAC;EAExD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACxB,EAAA,CA9CQD,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}