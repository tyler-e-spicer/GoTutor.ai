{"ast":null,"code":"export function backInTime(currentMove, pastMoves) {\n  console.log(\"invoking time travel\");\n  const pastMovesRef = [...pastMoves];\n  console.log(\"pastMovesRef: \", pastMovesRef);\n  const turnNum = currentMove;\n  console.log(\"turnNum \", turnNum);\n  if (!pastMovesRef || pastMovesRef.length === 0 || turnNum <= 0 || turnNum > pastMovesRef.length) {\n    return;\n  }\n  const newHistory = pastMovesRef[turnNum - 1];\n  console.log(\"newHistory \", newHistory);\n  setHistory(newHistory);\n  setCurrentMove(currentMove - 1);\n  console.log(\"history \", history);\n}\nexport function forwardInTime(currentMove, pastMoves) {\n  console.log(\"invoking time travel\");\n  const pastMovesRef = [...pastMoves];\n  console.log(\"pastMovesRef: \", pastMovesRef);\n  const turnNum = currentMove;\n  console.log(\"turnNum \", turnNum);\n  if (!pastMovesRef || pastMovesRef.length === 0 || turnNum < 0 || turnNum >= pastMovesRef.length - 1) {\n    return;\n  }\n  const newHistory = pastMovesRef[turnNum + 1];\n  console.log(\"newHistory \", newHistory);\n  setHistory(newHistory);\n  setCurrentMove(currentMove + 1);\n  console.log(\"history \", history);\n}","map":{"version":3,"names":["backInTime","currentMove","pastMoves","console","log","pastMovesRef","turnNum","length","newHistory","setHistory","setCurrentMove","history","forwardInTime"],"sources":["/Users/tylerspicer/Desktop/Codesmith/solo-project/src/utils/time-travel.js"],"sourcesContent":["export function backInTime(currentMove, pastMoves) {\n    console.log(\"invoking time travel\");\n    const pastMovesRef = [...pastMoves];\n    console.log(\"pastMovesRef: \", pastMovesRef);\n    const turnNum = currentMove;\n    console.log(\"turnNum \", turnNum);\n\n    if (\n      !pastMovesRef ||\n      pastMovesRef.length === 0 ||\n      turnNum <= 0 ||\n      turnNum > pastMovesRef.length\n    ) {\n      return;\n    }\n\n    const newHistory = pastMovesRef[turnNum - 1];\n    console.log(\"newHistory \", newHistory);\n    setHistory(newHistory);\n    setCurrentMove(currentMove - 1);\n    console.log(\"history \", history);\n  }\n\n  export function forwardInTime(currentMove, pastMoves) {\n    console.log(\"invoking time travel\");\n    const pastMovesRef = [...pastMoves];\n    console.log(\"pastMovesRef: \", pastMovesRef);\n    const turnNum = currentMove;\n    console.log(\"turnNum \", turnNum);\n\n    if (\n      !pastMovesRef ||\n      pastMovesRef.length === 0 ||\n      turnNum < 0 ||\n      turnNum >= pastMovesRef.length - 1\n    ) {\n      return;\n    }\n\n    const newHistory = pastMovesRef[turnNum + 1];\n    console.log(\"newHistory \", newHistory);\n    setHistory(newHistory);\n    setCurrentMove(currentMove + 1);\n    console.log(\"history \", history);\n  }"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,WAAW,EAAEC,SAAS,EAAE;EAC/CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC,MAAMC,YAAY,GAAG,CAAC,GAAGH,SAAS,CAAC;EACnCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAAC;EAC3C,MAAMC,OAAO,GAAGL,WAAW;EAC3BE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,OAAO,CAAC;EAEhC,IACE,CAACD,YAAY,IACbA,YAAY,CAACE,MAAM,KAAK,CAAC,IACzBD,OAAO,IAAI,CAAC,IACZA,OAAO,GAAGD,YAAY,CAACE,MAAM,EAC7B;IACA;EACF;EAEA,MAAMC,UAAU,GAAGH,YAAY,CAACC,OAAO,GAAG,CAAC,CAAC;EAC5CH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEI,UAAU,CAAC;EACtCC,UAAU,CAACD,UAAU,CAAC;EACtBE,cAAc,CAACT,WAAW,GAAG,CAAC,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEO,OAAO,CAAC;AAClC;AAEA,OAAO,SAASC,aAAaA,CAACX,WAAW,EAAEC,SAAS,EAAE;EACpDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC,MAAMC,YAAY,GAAG,CAAC,GAAGH,SAAS,CAAC;EACnCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAAC;EAC3C,MAAMC,OAAO,GAAGL,WAAW;EAC3BE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,OAAO,CAAC;EAEhC,IACE,CAACD,YAAY,IACbA,YAAY,CAACE,MAAM,KAAK,CAAC,IACzBD,OAAO,GAAG,CAAC,IACXA,OAAO,IAAID,YAAY,CAACE,MAAM,GAAG,CAAC,EAClC;IACA;EACF;EAEA,MAAMC,UAAU,GAAGH,YAAY,CAACC,OAAO,GAAG,CAAC,CAAC;EAC5CH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEI,UAAU,CAAC;EACtCC,UAAU,CAACD,UAAU,CAAC;EACtBE,cAAc,CAACT,WAAW,GAAG,CAAC,CAAC;EAC/BE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEO,OAAO,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}